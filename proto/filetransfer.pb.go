// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: proto/filetransfer.proto

package filetransfer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Signal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mechine string `protobuf:"bytes,1,opt,name=Mechine,proto3" json:"Mechine,omitempty"`
}

func (x *Signal) Reset() {
	*x = Signal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{0}
}

func (x *Signal) GetMechine() string {
	if x != nil {
		return x.Mechine
	}
	return ""
}

type MWU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sig       *Signal  `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	StreamHad []string `protobuf:"bytes,2,rep,name=StreamHad,proto3" json:"StreamHad,omitempty"`
}

func (x *MWU) Reset() {
	*x = MWU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MWU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MWU) ProtoMessage() {}

func (x *MWU) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MWU.ProtoReflect.Descriptor instead.
func (*MWU) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{1}
}

func (x *MWU) GetSig() *Signal {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MWU) GetStreamHad() []string {
	if x != nil {
		return x.StreamHad
	}
	return nil
}

type Alive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oniline int32 `protobuf:"varint,1,opt,name=Oniline,proto3" json:"Oniline,omitempty"`
}

func (x *Alive) Reset() {
	*x = Alive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alive) ProtoMessage() {}

func (x *Alive) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alive.ProtoReflect.Descriptor instead.
func (*Alive) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{2}
}

func (x *Alive) GetOniline() int32 {
	if x != nil {
		return x.Oniline
	}
	return 0
}

type File2Up struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FileSize int32  `protobuf:"varint,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	Content  []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *File2Up) Reset() {
	*x = File2Up{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File2Up) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File2Up) ProtoMessage() {}

func (x *File2Up) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File2Up.ProtoReflect.Descriptor instead.
func (*File2Up) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{3}
}

func (x *File2Up) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File2Up) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *File2Up) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type FileUpRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *FileUpRes) Reset() {
	*x = FileUpRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileUpRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUpRes) ProtoMessage() {}

func (x *FileUpRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUpRes.ProtoReflect.Descriptor instead.
func (*FileUpRes) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{4}
}

func (x *FileUpRes) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileUpRes) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type File2Get struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UnionStr string `protobuf:"bytes,2,opt,name=unionStr,proto3" json:"unionStr,omitempty"`
}

func (x *File2Get) Reset() {
	*x = File2Get{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File2Get) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File2Get) ProtoMessage() {}

func (x *File2Get) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File2Get.ProtoReflect.Descriptor instead.
func (*File2Get) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{5}
}

func (x *File2Get) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File2Get) GetUnionStr() string {
	if x != nil {
		return x.UnionStr
	}
	return ""
}

type FileGetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents []byte `protobuf:"bytes,1,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (x *FileGetRes) Reset() {
	*x = FileGetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileGetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileGetRes) ProtoMessage() {}

func (x *FileGetRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileGetRes.ProtoReflect.Descriptor instead.
func (*FileGetRes) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{6}
}

func (x *FileGetRes) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

type SpiltedFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	UnionStr string `protobuf:"bytes,2,opt,name=unionStr,proto3" json:"unionStr,omitempty"`
	Contents []byte `protobuf:"bytes,4,opt,name=contents,proto3" json:"contents,omitempty"`
}

func (x *SpiltedFile) Reset() {
	*x = SpiltedFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpiltedFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpiltedFile) ProtoMessage() {}

func (x *SpiltedFile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpiltedFile.ProtoReflect.Descriptor instead.
func (*SpiltedFile) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{7}
}

func (x *SpiltedFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *SpiltedFile) GetUnionStr() string {
	if x != nil {
		return x.UnionStr
	}
	return ""
}

func (x *SpiltedFile) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

type SplitedFileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *int32 `protobuf:"varint,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *SplitedFileRes) Reset() {
	*x = SplitedFileRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filetransfer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitedFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitedFileRes) ProtoMessage() {}

func (x *SplitedFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filetransfer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitedFileRes.ProtoReflect.Descriptor instead.
func (*SplitedFileRes) Descriptor() ([]byte, []int) {
	return file_proto_filetransfer_proto_rawDescGZIP(), []int{8}
}

func (x *SplitedFileRes) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

var File_proto_filetransfer_proto protoreflect.FileDescriptor

var file_proto_filetransfer_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x66, 0x69, 0x6c, 0x65,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x22, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x4b, 0x0a, 0x03,
	0x4d, 0x57, 0x55, 0x12, 0x26, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x61, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x61, 0x64, 0x22, 0x21, 0x0a, 0x05, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x6e, 0x69, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x4f, 0x6e, 0x69, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x53, 0x0a, 0x07,
	0x46, 0x69, 0x6c, 0x65, 0x32, 0x55, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x31, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x52, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x3a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x32, 0x47, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x22, 0x28, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x61, 0x0a, 0x0b, 0x53, 0x70,
	0x69, 0x6c, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x38, 0x0a,
	0x0e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xfa, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x1a, 0x13, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x12, 0x36, 0x0a, 0x0c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x57, 0x61, 0x6b, 0x65, 0x55,
	0x70, 0x12, 0x11, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x4d, 0x57, 0x55, 0x1a, 0x13, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x32, 0x55, 0x70, 0x1a, 0x17,
	0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x70, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x32, 0x47, 0x65, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x32, 0x9d, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x69, 0x6c, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x1a,
	0x1c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x28, 0x01, 0x12,
	0x43, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x32, 0x47, 0x65, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x3b, 0x66, 0x69, 0x6c, 0x65, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_filetransfer_proto_rawDescOnce sync.Once
	file_proto_filetransfer_proto_rawDescData = file_proto_filetransfer_proto_rawDesc
)

func file_proto_filetransfer_proto_rawDescGZIP() []byte {
	file_proto_filetransfer_proto_rawDescOnce.Do(func() {
		file_proto_filetransfer_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_filetransfer_proto_rawDescData)
	})
	return file_proto_filetransfer_proto_rawDescData
}

var file_proto_filetransfer_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_filetransfer_proto_goTypes = []any{
	(*Signal)(nil),         // 0: filetransfer.Signal
	(*MWU)(nil),            // 1: filetransfer.MWU
	(*Alive)(nil),          // 2: filetransfer.Alive
	(*File2Up)(nil),        // 3: filetransfer.File2Up
	(*FileUpRes)(nil),      // 4: filetransfer.FileUpRes
	(*File2Get)(nil),       // 5: filetransfer.File2Get
	(*FileGetRes)(nil),     // 6: filetransfer.FileGetRes
	(*SpiltedFile)(nil),    // 7: filetransfer.SpiltedFile
	(*SplitedFileRes)(nil), // 8: filetransfer.SplitedFileRes
}
var file_proto_filetransfer_proto_depIdxs = []int32{
	0, // 0: filetransfer.MWU.sig:type_name -> filetransfer.Signal
	0, // 1: filetransfer.MasterServer.HeartDance:input_type -> filetransfer.Signal
	1, // 2: filetransfer.MasterServer.MasterWakeUp:input_type -> filetransfer.MWU
	3, // 3: filetransfer.MasterServer.UploadFile:input_type -> filetransfer.File2Up
	5, // 4: filetransfer.MasterServer.GetFile:input_type -> filetransfer.File2Get
	7, // 5: filetransfer.NodeServer.TransportFile:input_type -> filetransfer.SpiltedFile
	5, // 6: filetransfer.NodeServer.GetFileFromNode:input_type -> filetransfer.File2Get
	2, // 7: filetransfer.MasterServer.HeartDance:output_type -> filetransfer.Alive
	2, // 8: filetransfer.MasterServer.MasterWakeUp:output_type -> filetransfer.Alive
	4, // 9: filetransfer.MasterServer.UploadFile:output_type -> filetransfer.FileUpRes
	6, // 10: filetransfer.MasterServer.GetFile:output_type -> filetransfer.FileGetRes
	8, // 11: filetransfer.NodeServer.TransportFile:output_type -> filetransfer.SplitedFileRes
	6, // 12: filetransfer.NodeServer.GetFileFromNode:output_type -> filetransfer.FileGetRes
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_filetransfer_proto_init() }
func file_proto_filetransfer_proto_init() {
	if File_proto_filetransfer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_filetransfer_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Signal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filetransfer_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MWU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filetransfer_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Alive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filetransfer_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*File2Up); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filetransfer_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FileUpRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filetransfer_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*File2Get); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filetransfer_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FileGetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filetransfer_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SpiltedFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filetransfer_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SplitedFileRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_filetransfer_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_filetransfer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_filetransfer_proto_goTypes,
		DependencyIndexes: file_proto_filetransfer_proto_depIdxs,
		MessageInfos:      file_proto_filetransfer_proto_msgTypes,
	}.Build()
	File_proto_filetransfer_proto = out.File
	file_proto_filetransfer_proto_rawDesc = nil
	file_proto_filetransfer_proto_goTypes = nil
	file_proto_filetransfer_proto_depIdxs = nil
}
